package org.haoxiangzuo.hw3;

import org.junit.Before;
import org.junit.Test;
import org.mockito.Mockito;
import org.shared.chess.Color;
import org.shared.chess.GameResult;
import org.shared.chess.GameResultReason;
import org.shared.chess.Piece;
import org.shared.chess.PieceKind;
import org.shared.chess.Position;
import org.shared.chess.State;
import org.haoxiangzuo.hw3.Presenter;

public class PresenterTest {
	  Presenter presenter;
	  Presenter.View view;
	  
	  @Before
	  public void setup() {
	    presenter = new Presenter();
	    view = Mockito.mock(Presenter.View.class); 
	    presenter.setView(view);
	  }
//	  the board is an up-side-down version of a normal board, 
//	  the row should change to 7-row
	  @Test
	  public void testSetState() {
	    State state = new State();
	    presenter.setState(state);
	    Mockito.verify(view).setWhoseTurn(Color.WHITE);
	    Mockito.verify(view).setGameResult(null);
	    Mockito.verify(view).setPiece(7, 0, 
	        new Piece(Color.WHITE, PieceKind.ROOK));
	    Mockito.verify(view).setPiece(4, 4, null);
	  }
	  @Test
	  public void testSetGameResult()
	  {
		  State state = new State();
		  state.setGameResult(new GameResult(Color.WHITE, GameResultReason.CHECKMATE));
		  presenter.setState(state);
		  Mockito.verify(view).setGameResult(new GameResult(Color.WHITE, GameResultReason.CHECKMATE));
	  }
	  @Test
	  public void testSetWhoseTurn()
	  {
		  State state = new State();
		  state.setTurn(Color.BLACK);
		  presenter.setState(state);
		  Mockito.verify(view).setWhoseTurn(Color.BLACK);
	  }
	  @Test
	  public void testSetWhoseTurn2()
	  {
		  State state = new State();
		  state.setTurn(Color.WHITE);
		  presenter.setState(state);
		  Mockito.verify(view).setWhoseTurn(Color.WHITE);
	  }
	  @Test
	  public void testSetPiece()
	  {
		  State state = new State();
		  presenter.setState(state);
		  Mockito.verify(view).setPiece(7, 0, new Piece(Color.WHITE, PieceKind.ROOK));
		  Mockito.verify(view).setPiece(4, 4, null);
	  }
	  @Test
	  public void testSetPiece2()
	  {
		  State state = new State();
		  presenter.setState(state);
		  Mockito.verify(view).setPiece(7, 4, new Piece(Color.WHITE, PieceKind.KING));
		  Mockito.verify(view).setPiece(3, 4, null);
	  }
	  @Test
	  public void testSetPiece3()
	  {
		  State state = new State();
		  presenter.setState(state);
		  Mockito.verify(view).setPiece(0, 4, new Piece(Color.BLACK, PieceKind.KING));
		  Mockito.verify(view).setPiece(4, 4, null);
	  }
}

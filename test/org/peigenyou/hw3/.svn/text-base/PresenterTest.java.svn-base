package org.peigenyou.hw3;

import org.junit.Before;
import org.junit.Test;
import org.mockito.Mockito;
import org.shared.chess.Color;
import org.shared.chess.GameResult;
import org.shared.chess.GameResultReason;
import org.shared.chess.Piece;
import org.shared.chess.PieceKind;
import org.shared.chess.Position;
import org.shared.chess.State;

import com.google.gwt.junit.client.GWTTestCase;

/**
 * Tests for the Presenter class.
 */
public class PresenterTest {
  Presenter presenter;
  Presenter.View view;
  
  @Before
  public void setup() {
    presenter = new Presenter();
    view = Mockito.mock(Presenter.View.class); 
    presenter.setView(view);
  }
  @Test
  public void testSetState() {
    State state = new State();
    presenter.setState(state);
    Mockito.verify(view).setWhoseTurn(Color.WHITE);
    Mockito.verify(view).setPiece(0, 0, 
        new Piece(Color.WHITE, PieceKind.ROOK));
    Mockito.verify(view).setPiece(4, 4, null);
  }
  
  @Test
  public void testPawnMove() {
    presenter.selectCell(1 , 0,true);
    presenter.selectCell(3 , 0,true);
    Mockito.verify(view).setWhoseTurn(Color.BLACK);
    Mockito.verify(view).setPiece(1, 0, null);
    Mockito.verify(view).setPiece(3, 0, new Piece(Color.WHITE, PieceKind.PAWN));
  }
  
  @Test
  public void testRookMove() {
    State state = new State();
    state.setPiece(1, 0, null);
    presenter.setState(state);
    presenter.selectCell(0 , 0,true);
    presenter.selectCell(3 , 0,true);
    Mockito.verify(view).setWhoseTurn(Color.BLACK);
    Mockito.verify(view).setPiece(0, 0, null);
    Mockito.verify(view).setPiece(3, 0, new Piece(Color.WHITE, PieceKind.ROOK));
  }
  
  @Test
  public void testKnightMove() {
    presenter.selectCell(0 , 1,true);
    presenter.selectCell(2 , 0,true);
    Mockito.verify(view).setWhoseTurn(Color.BLACK);
    Mockito.verify(view).setPiece(0, 1, null);
    Mockito.verify(view).setPiece(2, 0, new Piece(Color.WHITE, PieceKind.KNIGHT));
  }
  
  @Test
  public void testBishopMove() {
    State state = new State();
    state.setPiece(1, 3, null);
    presenter.setState(state);
    presenter.selectCell(0 , 2,true);
    presenter.selectCell(3 , 5,true);
    Mockito.verify(view).setWhoseTurn(Color.BLACK);
    Mockito.verify(view).setPiece(0, 2, null);
    Mockito.verify(view).setPiece(3, 5, new Piece(Color.WHITE, PieceKind.BISHOP));
  }
  
  @Test
  public void testQueenMove() {
    State state = new State();
    state.setPiece(1, 3, null);
    presenter.setState(state);
    presenter.selectCell(0 , 3,true);
    presenter.selectCell(3 , 3,true);
    Mockito.verify(view).setWhoseTurn(Color.BLACK);
    Mockito.verify(view).setPiece(0, 3, null);
    Mockito.verify(view).setPiece(3, 3, new Piece(Color.WHITE, PieceKind.QUEEN));
  }
  
  @Test
  public void testKingMove() {
    State state = new State();
    state.setPiece(1, 4, null);
    presenter.setState(state);
    presenter.selectCell(0 , 4,true);
    presenter.selectCell(1 , 4,true);
    Mockito.verify(view).setWhoseTurn(Color.BLACK);
    Mockito.verify(view).setPiece(0, 4, null);
    Mockito.verify(view).setPiece(1, 4, new Piece(Color.WHITE, PieceKind.KING));
  }
  
  @Test
  public void testCapture1() {
    State state = new State();
    state.setPiece(1, 0, null); 
    presenter.setState(state);
    presenter.selectCell(0 , 0,true);
    presenter.selectCell(6 , 0,true);
    Mockito.verify(view).setWhoseTurn(Color.BLACK);
    Mockito.verify(view).setPiece(0, 0, null);
    Mockito.verify(view).setPiece(6, 0, new Piece(Color.WHITE, PieceKind.ROOK));
  }
  @Test
  public void testCapture2() {
    State state = new State();
    state.setPiece(1, 3, null);
    presenter.setState(state);
    presenter.selectCell(0 , 3,true);
    presenter.selectCell(6 , 3,true);
    Mockito.verify(view).setWhoseTurn(Color.BLACK);
    Mockito.verify(view).setPiece(0, 3, null);
    Mockito.verify(view).setPiece(6, 3, new Piece(Color.WHITE, PieceKind.QUEEN));
  }
  @Test
  public void testEndGame_FIFTY_MOVE_RULE() {
    State state = new State(Color.BLACK, new Piece [State.ROWS][State.COLS], new boolean[]{false, false}, new boolean[]{false, false}, null, 99, null);
    state.setPiece(0, 4, new Piece(Color.WHITE, PieceKind.KING));
    state.setPiece(3, 4, new Piece(Color.BLACK, PieceKind.KING));
    presenter.setState(state);
    presenter.selectCell(3 , 4,true);
    presenter.selectCell(2 , 4,true);
    Mockito.verify(view).setWhoseTurn(Color.WHITE);
    Mockito.verify(view).setGameResult(new GameResult(null, GameResultReason.FIFTY_MOVE_RULE));
    Mockito.verify(view).setPiece(3, 4, null);
    Mockito.verify(view).setPiece(2, 4, new Piece(Color.BLACK, PieceKind.KING));
  }
	
  
}

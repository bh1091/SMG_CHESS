      package org.paulsultan.hw3;

import org.paulsultan.hw6.LoginInfo;
import org.paulsultan.hw6.client.LoginService;
import org.paulsultan.hw6.client.LoginServiceAsync;
import org.shared.chess.State;

import com.google.gwt.core.client.EntryPoint;
import com.google.gwt.core.client.GWT;
import com.google.gwt.user.client.Window;
import com.google.gwt.user.client.rpc.AsyncCallback;
import com.google.gwt.user.client.ui.Anchor;
import com.google.gwt.user.client.ui.Label;
import com.google.gwt.user.client.ui.RootPanel;
import com.google.gwt.user.client.ui.VerticalPanel;


public class ChessEntryPoint implements EntryPoint {
	private LoginInfo loginInfo = null;
	private VerticalPanel loginPanel = new VerticalPanel();
	private Label loginLabel = new Label("Please sign in to your Google Account to access chess");
	private Anchor signInLink = new Anchor("Sign In");
	private Anchor signOutLink = new Anchor("Sign Out");
	
	@Override
	public void onModuleLoad(){
		LoginServiceAsync loginService = GWT.create(LoginService.class);
		loginService.login(GWT.getHostPageBaseURL()+"paulsultan.html", new AsyncCallback<LoginInfo>(){
			public void onFailure(Throwable error) {
				Window.alert("Sign in Failure");
			}

			public void onSuccess(LoginInfo result) {				
				loginInfo = result;
				if (loginInfo.isLoggedIn()){
					//user logged in load chess
					
					final Graphics graphics = new Graphics();
					graphics.presenter.loginInfo=loginInfo;
					graphics.presenter.setView(graphics);
					graphics.addDragDropHandlers();
				    RootPanel.get().add(graphics);
				    
				    State state;
				    state = new State();
				    graphics.presenter.setState(state);
				    graphics.presenter.bindHandlers();
				    
			 	    signOutLink.setHref(loginInfo.getLogoutUrl());
				    RootPanel.get().add(signOutLink);
				}
				else{
					//user needs to login
					signInLink.setHref(loginInfo.getLoginUrl());
					loginPanel.add(loginLabel);
					loginPanel.add(signInLink);
					RootPanel.get().add(loginPanel);
				}
			}
		});
	}
	
	
}

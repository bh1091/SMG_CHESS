package org.ashishmanral.hw6.server;

import org.ashishmanral.hw6.client.UserDetails;
import org.ashishmanral.hw6.client.LoginService;
import org.shared.chess.Color;

import com.google.appengine.api.channel.ChannelService;
import com.google.appengine.api.channel.ChannelServiceFactory;
import com.google.appengine.api.users.User;
import com.google.appengine.api.users.UserService;
import com.google.appengine.api.users.UserServiceFactory;
import com.google.gwt.user.server.rpc.RemoteServiceServlet;

/**
 * LoginServiceImpl.java
 * @author Ashish
 * This class is the server side code that handles Login of a user to play the 
 * chess game. It calls methods of other classes that determine if it is the first user
 * or a second user for a board. Finally, it returns the UserDetails to the client.
 */
@SuppressWarnings("serial")
public class LoginServiceImpl extends RemoteServiceServlet implements LoginService {

  @Override
  public UserDetails login(String requestUri) {
    
	UserDetails userDetails = new UserDetails();
	UserService userService = UserServiceFactory.getUserService();
    User user = userService.getCurrentUser();
    
    if(user == null) userDetails.setLoginUrl(userService.createLoginURL(requestUri));
    else {
      //ChannelService channelService = ChannelServiceFactory.getChannelService();
      //Client Id is the playerId which is autogenerated sequential natural numbers.
      /*int clientId = PlayerManager.getPlayerId();
      String token = channelService.createChannel(new Integer(clientId).toString());
      PlayerManager.addPlayer();  // addPlayer method adds the player to an available board.
      userDetails.setToken(token);*/
      userDetails.setEmailId(user.getEmail());
      /*userDetails.setPlayerColor((clientId%2==0)?Color.WHITE:Color.BLACK);
	  userDetails.setBoardId(BoardManager.getBoardId());*/
      userDetails.login();
      //userDetails.setLogoutUrl(userService.createLogoutURL(requestUri));	
    }
    return userDetails;
  }

}